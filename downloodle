#!/bin/bash

logo() {

  unset blank
  for ((i=44; i < "$COLUMNS"-1; i+=2)); do blank+=' '; done
  echo
  echo "$blank     __                __             ____"
  echo "$blank ___/ /__ _    _____  / /__  ___  ___/ / /__"
  echo "$blank/ _  / _ \ |/|/ / _ \/ / _ \/ _ \/ _  / / -_)"
  echo "$blank\_,_/\___/__,__/_//_/_/\___/\___/\_,_/_/\__/"
  echo "$blank                                 By TyraVex"
  echo

}

editCookie() {

  unset cookie
  echo -e "\e[33m\nGet the cookie value here : \e[34mhttps://moodle2223.centralelille.fr"
  echo -e "\e[33mEnter dev tools (F12) -> Network tab -> Reload the page -> Select the first request -> Cookie tab\e[0m\n"
  read -p 'Cookie : ' cookie
  if [[ -z "$cookie" ]]; then
    menu 'error' 'Empty input'
  else
    echo "$cookie" > .cookie
    menu 'success' 'Cookie was edited'
  fi

}

menu() {

  clear
  if (( "$COLUMNS" > 45 )); then
    logo
  else
    echo
  fi
  case "$1" in
    error) echo -e "\e[31mERROR : $2\e[0m\n";;
    success) echo -e "\e[32mSUCCESS : $2\e[0m\n";;
  esac
  unset dashes
  for ((i=11; i < "$COLUMNS"-1; i+=2)); do dashes+='-'; done
  echo -e "\e[34m$dashes MAIN MENU $dashes\e[0m"
  if [[ "$2" == 'No cookie found' || "$2" == 'Cookie is invalid or expired' ]]; then
    editCookie
  fi
  cookie="$(cat .cookie 2>/dev/null)"
  if [[ -z "$cookie" ]]; then
    menu 'error' 'No cookie found'
    exit
  elif [[ "$cookie" == invalid ]]; then
    menu 'error' 'Cookie is invalid or expired'
    exit
  else
    if [[ "$1" == '--links' || "$1" == '-l' ]]; then
      scrape "$cookie" 'links'
    else
      scrape "$cookie"
    fi
  fi

}

scrape() {

  clear
  if (( "$COLUMNS" > 45 )); then
    logo
  else
    echo
  fi
  unset dashes
  for ((i=9; i < "$COLUMNS"-1; i+=2)); do dashes+='-'; done
  echo -e "\e[34m$dashes SCRAPER $dashes\e[0m"

  cookie="$1"
  regex1='(?<=<option  value=")[0-9]+(?=")'
  regex2='(?<=" >).+(?=</option>)'
  regex3='(?<=<a class="aalink" href=")https:\/\/moodle2223\.centralelille\.fr\/course\/view\.php\?id=[0-9]+(?=">)'
  regex4='class="aalink" href="https:\/\/moodle2223\.centralelille\.fr\/course\/view\.php\?id=[0-9]+">\K[^<]+'
  regex5='https:\/\/moodle2223\.centralelille\.fr\/mod\/resource\/view\.php\?id=[0-9]+(?=">.{0,300}<span class="instancename">[^<]+)'
  regex6='https:\/\/moodle2223\.centralelille\.fr\/mod\/resource\/view\.php\?id=[0-9]+">.{0,300}<span class="instancename">\K[^<]+'
  regex7='https:\/\/moodle2223\.centralelille\.fr\/pluginfile\.php/[0-9]+/mod_resource/content/[^"]+'
  page=$(curl -s 'https://moodle2223.centralelille.fr/course/index.php?categoryid=2' -H "Cookie: MoodleSession=$cookie" | sed 's:selected::g')
  [ -z "$page" ] && menu 'error' 'Network error' && exit
  if [[ "$page" =~ '<h1>Redirection</h1>' ]]; then echo "invalid" > .cookie; menu 'error' 'Cookie is invalid or expired'; exit; fi
  readarray -t optionIds <<< $(grep -Po "$regex1" <<< "$page")
  readarray -t optionNames <<< $(grep -Po "$regex2" <<< "$page")
  echo

  for ((i=0; i < "${#optionIds[@]}"; i++)); do

    if [[ "${optionNames[i+1]}" =~ "${optionNames[i]} / " || ! "${optionNames[i]}" =~ 'IG2I (Sous statut Etudiant)' ]]; then continue; fi
    if [[ ! "${optionNames[i]}" =~ "GÃ©nie Informatique 1" ]]; then continue; fi
    link="https://moodle2223.centralelille.fr/course/index.php?categoryid=${optionIds[i]}"
    echo -e "${optionNames[i]}"
    if [[ "$2" == 'links' ]]; then
      echo -e "\e[34m$link\e[0m"
    fi
    page=$(curl -s "$link" -H "Cookie: MoodleSession=$cookie")
    readarray -t linkUrls <<< $(grep -Po "$regex3" <<< "$page")
    readarray -t linkNames <<< $(grep -Po "$regex4" <<< "$page")
    if [[ "${#linkUrls[@]}" != "${#linkNames[@]}" ]]; then
      echo -e "\e[31m  > ERROR : NUMBER OF LINK URLS AND NAMES ARE NOT MATCHING (URLS : ${#linkUrls[@]}, NAMES : ${#linkNames[@]})\e[0m"
      echo -e "\e[31m  > PLEASE REPORT THIS ERROR HERE : https://github.com/TyraVex/downloodle/issues/new\e[0m"
      echo "$page" > .debug
      sleep 2
    fi
    for ((j=0; j < "${#linkUrls[@]}"; j++)); do
      echo -e "\e[33m  > ${linkNames[j]//&amp;/&}\e[0m"
      if [[ "$2" == 'links' ]]; then
        echo -e "\e[34m    ${linkUrls[j]}\e[0m"
      fi
      page=$(curl -s "${linkUrls[j]}" -H "Cookie: MoodleSession=$cookie")
      readarray -t fileUrls <<< $(grep -Po "$regex5" <<< "$page")
      readarray -t fileNames <<< $(grep -Po "$regex6" <<< "$page")
      if [[ "${#fileUrls[@]}" != "${#fileNames[@]}" ]]; then
        echo -e "\e[31m    > ERROR : NUMBER OF FILE URLS AND NAMES ARE NOT MATCHING (URLS : ${#fileUrls[@]}, NAMES : ${#fileNames[@]})\e[0m"
        echo -e "\e[31m    > PLEASE REPORT THIS ERROR HERE : https://github.com/TyraVex/downloodle/issues/new\e[0m"
        echo "$page" > .debug
        sleep 2
      fi
      for ((k=0; k < "${#fileUrls[@]}"; k++)); do
        if [[ -n "${fileUrls[k]}" ]]; then
          echo -e "\e[32m    > Downloading ${fileNames[k]//&amp;/&}\e[0m"
          finalUrl=$(curl -Ls -Io /dev/null -w %{url_effective} -H "Cookie: MoodleSession=$cookie" "${fileUrls[k]}")
          if [[ "${finalUrl##*.}" =~ 'php?id=' ]]; then
            finalUrl=$(curl -s "$finalUrl" -H "Cookie: MoodleSession=$cookie" | grep -Po "$regex7")
          fi
          if [[ "${finalUrl##*.}" =~ '/mod_resource/content/' ]]; then
            echo "    > No extention"
            unset extention
          else
            extention=".${finalUrl##*.}"
            extention="${extention//?forcedownload=1/}"
          fi
          path="${optionNames[i]// \/ /\/}/${linkNames[j]// \/ /\/}"
          fileName="${fileNames[k]//\//-}${extention}"
          fileName="${fileName//&amp;/et}"
          fileName="${fileName//&20;/ }"
          mkdir -p "$path"
          curl -sL "$finalUrl" -H "Cookie: MoodleSession=$cookie" > "${path}/${fileName}"
          if [[ "$2" == 'links' ]]; then
            echo -e "\e[34m      $finalUrl\e[0m"
          fi
        else
          echo -e "\e[31m    > Nothing found here\e[0m"
        fi
      done
    done
    echo

  done

}

menu "$1"
